services:
  db-dev:
    profiles:
      - dev
    image: mongo
    ports:
      - "27017:27017"
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27017"]
    environment:
      MONGO_INITDB_ROOT_USERNAME: $MONGO_ROOT_USERNAME
      MONGO_INITDB_ROOT_PASSWORD: $MONGO_ROOT_PASSWORD
      MONGO_INITDB_DATABASE: "octopost"
    volumes:
      - db:/var/lib/mongodb/mydata
      - db-config:/data/config
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'host.docker.internal:27017'}]}) }" | mongosh --port 27017 --quiet
      interval: 5s
      timeout: 30s
      start_period: 0s
      start_interval: 1s
      retries: 30
    networks:
      - octopost

  mongo-express-dev:
    profiles:
      - dev
    image: mongo-express
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: $MONGODB_ADMINUSERNAME
      ME_CONFIG_MONGODB_ADMINPASSWORD: $MONGODB_ADMINPASSWORD
      ME_CONFIG_MONGODB_URL: "mongodb://octopost:1234@db-dev:27017"
      ME_CONFIG_BASICAUTH: false
    networks:
      - octopost

  api:
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: octopost-api
    profiles:
      - prod
    ports:
      - "${PORT}:${PORT}"
    networks:
      - octopost

networks:
  octopost:
    driver: bridge

volumes:
  db:
  db-config:
